---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/bookings":
    get:
      summary: Retrieves all bookings for the current user
      tags:
      - Bookings
      parameters:
      - name: Authorization
        in: header
        required: true
        description: JWT token
        schema:
          type: string
      responses:
        '200':
          description: bookings found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    repairer_id:
                      type: integer
                    service_id:
                      type: integer
                    start_time:
                      type: string
                      format: date-time
                    end_time:
                      type: string
                      format: date-time
                    status:
                      type: string
                    address:
                      type: string
                    notes:
                      type: string
                      nullable: true
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                  required:
                  - id
                  - repairer_id
                  - service_id
                  - start_time
                  - end_time
                  - status
                  - address
        '401':
          description: unauthorized
    post:
      summary: Creates a booking
      tags:
      - Bookings
      parameters:
      - name: Authorization
        in: header
        required: true
        description: JWT token
        schema:
          type: string
      responses:
        '201':
          description: booking created
        '422':
          description: invalid request
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                booking:
                  type: object
                  properties:
                    repairer_id:
                      type: integer
                    service_id:
                      type: integer
                    start_time:
                      type: string
                      format: date-time
                    address:
                      type: string
                    notes:
                      type: string
                      nullable: true
                  required:
                  - repairer_id
                  - service_id
                  - start_time
                  - address
  "/api/v1/bookings/{id}":
    parameters:
    - name: id
      in: path
      description: ID of the booking
      required: true
      schema:
        type: integer
    get:
      summary: Retrieves a booking
      tags:
      - Bookings
      parameters:
      - name: Authorization
        in: header
        required: true
        description: JWT token
        schema:
          type: string
      responses:
        '200':
          description: booking found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  repairer_id:
                    type: integer
                  service_id:
                    type: integer
                  start_time:
                    type: string
                    format: date-time
                  end_time:
                    type: string
                    format: date-time
                  status:
                    type: string
                  address:
                    type: string
                  notes:
                    type: string
                    nullable: true
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                required:
                - id
                - repairer_id
                - service_id
                - start_time
                - end_time
                - status
                - address
        '404':
          description: booking not found
        '401':
          description: unauthorized
    put:
      summary: Updates a booking
      tags:
      - Bookings
      parameters:
      - name: Authorization
        in: header
        required: true
        description: JWT token
        schema:
          type: string
      responses:
        '200':
          description: booking updated
        '422':
          description: invalid request
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                booking:
                  type: object
                  properties:
                    address:
                      type: string
                    notes:
                      type: string
                      nullable: true
    delete:
      summary: Cancels a booking
      tags:
      - Bookings
      parameters:
      - name: Authorization
        in: header
        required: true
        description: JWT token
        schema:
          type: string
      responses:
        '204':
          description: booking cancelled
        '404':
          description: booking not found
        '401':
          description: unauthorized
  "/api/v1/profile":
    get:
      summary: Retrieves the current user profile
      tags:
      - Profile
      security:
      - Bearer: []
      parameters:
      - name: Authorization
        in: header
        required: true
        description: JWT token
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  email_address:
                    type: string
                    format: email
                  address:
                    type: string
                  latitude:
                    type: number
                    format: float
                    nullable: true
                  longitude:
                    type: number
                    format: float
                    nullable: true
                  date_of_birth:
                    type: string
                    format: date
                    nullable: true
                  mobile_number:
                    type: string
                    nullable: true
                  onboarded:
                    type: boolean
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                required:
                - id
                - name
                - email_address
                - address
                - onboarded
                - created_at
                - updated_at
        '401':
          description: unauthorized - no token
    put:
      summary: Updates the current user profile
      tags:
      - Profile
      security:
      - Bearer: []
      parameters:
      - name: Authorization
        in: header
        required: true
        description: JWT token
        schema:
          type: string
      responses:
        '200':
          description: profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  email_address:
                    type: string
                    format: email
                  address:
                    type: string
                  date_of_birth:
                    type: string
                    format: date
                    nullable: true
                  mobile_number:
                    type: string
                    nullable: true
                  latitude:
                    type: number
                    format: float
                    nullable: true
                  longitude:
                    type: number
                    format: float
                    nullable: true
                  onboarded:
                    type: boolean
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                required:
                - id
                - name
                - email_address
                - address
                - date_of_birth
                - mobile_number
                - onboarded
        '401':
          description: unauthorized
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                    address:
                      type: string
                    date_of_birth:
                      type: string
                      format: date
                    mobile_number:
                      type: string
                    latitude:
                      type: number
                      format: float
                    longitude:
                      type: number
                      format: float
              required:
              - user
  "/api/v1/repairer_sessions":
    post:
      summary: Logs in a repairer
      tags:
      - Repairer Authentication
      parameters: []
      responses:
        '201':
          description: login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT authentication token
                  repairer:
                    "$ref": "#/components/schemas/repairer"
                required:
                - token
                - repairer
        '401':
          description: invalid credentials - wrong email
        '400':
          description: missing parameters
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email_address:
                  type: string
                  format: email
                  example: repairer@example.com
                password:
                  type: string
                  format: password
                  example: password123
              required:
              - email_address
              - password
  "/api/v1/repairers/{repairer_id}/calendar/{year}/{month}":
    parameters:
    - name: repairer_id
      in: path
      description: ID of the repairer
      required: true
      schema:
        type: string
    - name: year
      in: path
      description: Year for the calendar view
      required: true
      schema:
        type: integer
    - name: month
      in: path
      description: Month for the calendar view (1-12)
      required: true
      schema:
        type: integer
    - name: Authorization
      in: header
      required: true
      description: JWT token
      schema:
        type: string
    get:
      summary: Retrieves the monthly availability calendar for a repairer
      tags:
      - Repairers
      security:
      - Bearer: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  year:
                    type: integer
                    example: 2025
                  month:
                    type: integer
                    example: 4
                  calendar:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        available:
                          type: boolean
                          description: Indicates if the repairer has any availability
                            on this day
                      required:
                      - available
                    description: Object mapping dates (YYYY-MM-DD) to their availability
                      status
                required:
                - year
                - month
                - calendar
        '400':
          description: invalid parameters
        '404':
          description: repairer not found
        '401':
          description: unauthorized - no token
  "/api/v1/repairers/nearby":
    parameters:
    - name: latitude
      in: query
      format: float
      required: true
      description: User's latitude
      schema:
        type: number
    - name: longitude
      in: query
      format: float
      required: true
      description: User's longitude
      schema:
        type: number
    - name: radius
      in: query
      format: float
      required: false
      description: 'Search radius in kilometers (default: 10)'
      schema:
        type: number
    - name: Authorization
      in: header
      required: true
      description: JWT token
      schema:
        type: string
    get:
      summary: Finds repairers near a given location
      tags:
      - Repairers
      security:
      - Bearer: []
      responses:
        '200':
          description: successful - no repairers found
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/repairer"
        '400':
          description: invalid radius
        '401':
          description: unauthorized - no token
  "/api/v1/sessions":
    post:
      summary: Creates a session (logs in)
      tags:
      - Sessions
      parameters: []
      responses:
        '200':
          description: user logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user_id:
                    type: integer
                required:
                - token
                - user_id
        '401':
          description: unauthorized - invalid credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email_address:
                  type: string
                password:
                  type: string
              required:
              - email_address
              - password
  "/api/v1/sessions/{id}":
    delete:
      summary: Destroys a session (logs out)
      tags:
      - Sessions
      parameters:
      - name: id
        in: path
        description: ID is optional
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        description: JWT token
        schema:
          type: string
      responses:
        '200':
          description: user logged out
        '401':
          description: unauthorized
  "/api/v1/users/{id}":
    get:
      summary: Retrieves a user
      tags:
      - Users
      parameters:
      - name: id
        in: path
        description: ID of the user
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        description: JWT token
        schema:
          type: string
      responses:
        '200':
          description: user found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  email_address:
                    type: string
                  address:
                    type: string
                  date_of_birth:
                    type: string
                    format: date
                    nullable: true
                  mobile_number:
                    type: string
                    nullable: true
                  latitude:
                    type: number
                    format: float
                    nullable: true
                  longitude:
                    type: number
                    format: float
                    nullable: true
                  onboarded:
                    type: boolean
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                required:
                - id
                - name
                - email_address
                - onboarded
        '404':
          description: user not found
        '401':
          description: unauthorized
    put:
      summary: Updates a user
      tags:
      - Users
      parameters:
      - name: id
        in: path
        description: ID of the user
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        description: JWT token
        schema:
          type: string
      responses:
        '200':
          description: user updated
        '403':
          description: forbidden - cannot update another user
        '401':
          description: unauthorized
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                    address:
                      type: string
                    date_of_birth:
                      type: string
                      format: date
                    mobile_number:
                      type: string
                    latitude:
                      type: number
                      format: float
                    longitude:
                      type: number
                      format: float
              required:
              - user
  "/api/v1/users":
    post:
      summary: Creates a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                    email_address:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
                  required:
                  - name
                  - email_address
                  - password
                  - password_confirmation
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
components:
  schemas:
    error:
      type: object
      properties:
        error:
          type: string
          description: Error message
      required:
      - error
    repairer:
      type: object
      properties:
        id:
          type: integer
          description: Repairer ID
        name:
          type: string
          description: Repairer name
        email_address:
          type: string
          format: email
          description: Repairer email
        hourly_rate:
          type: number
          format: float
          description: Hourly rate
        service_radius:
          type: integer
          description: Service radius in km
        latitude:
          type: number
          format: float
          description: Latitude
        longitude:
          type: number
          format: float
          description: Longitude
      required:
      - id
      - name
      - email_address
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      description: JWT token for authentication
